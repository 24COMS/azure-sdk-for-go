// +build go1.9

// Copyright 2018 Microsoft Corporation
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//     http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

// This code was auto-generated by:
// github.com/Azure/azure-sdk-for-go/tools/profileBuilder

package consumption

import original "github.com/Azure/azure-sdk-for-go/services/consumption/mgmt/2018-03-31/consumption"

type BudgetsClient = original.BudgetsClient

const (
	DefaultBaseURI = original.DefaultBaseURI
)

type BaseClient = original.BaseClient
type CostTagsClient = original.CostTagsClient
type GetBalancesByBillingAccountClient = original.GetBalancesByBillingAccountClient
type MarketplacesClient = original.MarketplacesClient
type MarketplacesByBillingAccountClient = original.MarketplacesByBillingAccountClient
type MarketplacesByDepartmentClient = original.MarketplacesByDepartmentClient
type MarketplacesByEnrollmentAccountsClient = original.MarketplacesByEnrollmentAccountsClient
type BillingFrequency = original.BillingFrequency

const (
	Month   BillingFrequency = original.Month
	Quarter BillingFrequency = original.Quarter
	Year    BillingFrequency = original.Year
)

type CategoryType = original.CategoryType

const (
	Cost  CategoryType = original.Cost
	Usage CategoryType = original.Usage
)

type Datagrain = original.Datagrain

const (
	DailyGrain   Datagrain = original.DailyGrain
	MonthlyGrain Datagrain = original.MonthlyGrain
)

type OperatorType = original.OperatorType

const (
	EqualTo              OperatorType = original.EqualTo
	GreaterThan          OperatorType = original.GreaterThan
	GreaterThanOrEqualTo OperatorType = original.GreaterThanOrEqualTo
)

type PriceHidden = original.PriceHidden

const (
	False PriceHidden = original.False
	True  PriceHidden = original.True
)

type TimeGrainType = original.TimeGrainType

const (
	Annually  TimeGrainType = original.Annually
	Monthly   TimeGrainType = original.Monthly
	Quarterly TimeGrainType = original.Quarterly
)

type Balance = original.Balance
type BalanceProperties = original.BalanceProperties
type BalancePropertiesAdjustmentDetailsItem = original.BalancePropertiesAdjustmentDetailsItem
type BalancePropertiesNewPurchasesDetailsItem = original.BalancePropertiesNewPurchasesDetailsItem
type Budget = original.Budget
type BudgetProperties = original.BudgetProperties
type BudgetsListResult = original.BudgetsListResult
type BudgetsListResultIterator = original.BudgetsListResultIterator
type BudgetsListResultPage = original.BudgetsListResultPage
type BudgetTimePeriod = original.BudgetTimePeriod
type CostTag = original.CostTag
type CostTagProperties = original.CostTagProperties
type CostTags = original.CostTags
type CurrentSpend = original.CurrentSpend
type ErrorDetails = original.ErrorDetails
type ErrorResponse = original.ErrorResponse
type Filters = original.Filters
type Marketplace = original.Marketplace
type MarketplaceProperties = original.MarketplaceProperties
type MarketplacesListResult = original.MarketplacesListResult
type MarketplacesListResultIterator = original.MarketplacesListResultIterator
type MarketplacesListResultPage = original.MarketplacesListResultPage
type MeterDetails = original.MeterDetails
type Notification = original.Notification
type Operation = original.Operation
type OperationDisplay = original.OperationDisplay
type OperationListResult = original.OperationListResult
type OperationListResultIterator = original.OperationListResultIterator
type OperationListResultPage = original.OperationListResultPage
type PriceSheetModel = original.PriceSheetModel
type PriceSheetProperties = original.PriceSheetProperties
type PriceSheetResult = original.PriceSheetResult
type ProxyResource = original.ProxyResource
type ReservationDetails = original.ReservationDetails
type ReservationDetailsListResult = original.ReservationDetailsListResult
type ReservationDetailsListResultIterator = original.ReservationDetailsListResultIterator
type ReservationDetailsListResultPage = original.ReservationDetailsListResultPage
type ReservationDetailsProperties = original.ReservationDetailsProperties
type ReservationRecommendations = original.ReservationRecommendations
type ReservationRecommendationsListResult = original.ReservationRecommendationsListResult
type ReservationRecommendationsListResultIterator = original.ReservationRecommendationsListResultIterator
type ReservationRecommendationsListResultPage = original.ReservationRecommendationsListResultPage
type ReservationRecommendationsProperties = original.ReservationRecommendationsProperties
type ReservationSummaries = original.ReservationSummaries
type ReservationSummariesListResult = original.ReservationSummariesListResult
type ReservationSummariesListResultIterator = original.ReservationSummariesListResultIterator
type ReservationSummariesListResultPage = original.ReservationSummariesListResultPage
type ReservationSummariesProperties = original.ReservationSummariesProperties
type Resource = original.Resource
type ResourceAttributes = original.ResourceAttributes
type Tag = original.Tag
type TagProperties = original.TagProperties
type Tags = original.Tags
type UsageDetail = original.UsageDetail
type UsageDetailProperties = original.UsageDetailProperties
type UsageDetailsListResult = original.UsageDetailsListResult
type UsageDetailsListResultIterator = original.UsageDetailsListResultIterator
type UsageDetailsListResultPage = original.UsageDetailsListResultPage
type OperationsClient = original.OperationsClient
type PriceSheetClient = original.PriceSheetClient
type ReservationRecommendationsClient = original.ReservationRecommendationsClient
type ReservationsDetailsClient = original.ReservationsDetailsClient
type ReservationsSummariesClient = original.ReservationsSummariesClient
type TagsClient = original.TagsClient
type UsageDetailsClient = original.UsageDetailsClient
type UsageDetailsByBillingAccountClient = original.UsageDetailsByBillingAccountClient
type UsageDetailsByDepartmentClient = original.UsageDetailsByDepartmentClient
type UsageDetailsByEnrollmentAccountClient = original.UsageDetailsByEnrollmentAccountClient

func NewBudgetsClient(billingAccountID string, departmentID string, enrollmentAccountID string, subscriptionID string) BudgetsClient {
	return original.NewBudgetsClient(billingAccountID, departmentID, enrollmentAccountID, subscriptionID)
}
func NewBudgetsClientWithBaseURI(baseURI string, billingAccountID string, departmentID string, enrollmentAccountID string, subscriptionID string) BudgetsClient {
	return original.NewBudgetsClientWithBaseURI(baseURI, billingAccountID, departmentID, enrollmentAccountID, subscriptionID)
}
func New(billingAccountID string, departmentID string, enrollmentAccountID string, subscriptionID string) BaseClient {
	return original.New(billingAccountID, departmentID, enrollmentAccountID, subscriptionID)
}
func NewWithBaseURI(baseURI string, billingAccountID string, departmentID string, enrollmentAccountID string, subscriptionID string) BaseClient {
	return original.NewWithBaseURI(baseURI, billingAccountID, departmentID, enrollmentAccountID, subscriptionID)
}
func NewCostTagsClient(billingAccountID string, departmentID string, enrollmentAccountID string, subscriptionID string) CostTagsClient {
	return original.NewCostTagsClient(billingAccountID, departmentID, enrollmentAccountID, subscriptionID)
}
func NewCostTagsClientWithBaseURI(baseURI string, billingAccountID string, departmentID string, enrollmentAccountID string, subscriptionID string) CostTagsClient {
	return original.NewCostTagsClientWithBaseURI(baseURI, billingAccountID, departmentID, enrollmentAccountID, subscriptionID)
}
func NewGetBalancesByBillingAccountClient(billingAccountID string, departmentID string, enrollmentAccountID string, subscriptionID string) GetBalancesByBillingAccountClient {
	return original.NewGetBalancesByBillingAccountClient(billingAccountID, departmentID, enrollmentAccountID, subscriptionID)
}
func NewGetBalancesByBillingAccountClientWithBaseURI(baseURI string, billingAccountID string, departmentID string, enrollmentAccountID string, subscriptionID string) GetBalancesByBillingAccountClient {
	return original.NewGetBalancesByBillingAccountClientWithBaseURI(baseURI, billingAccountID, departmentID, enrollmentAccountID, subscriptionID)
}
func NewMarketplacesClient(billingAccountID string, departmentID string, enrollmentAccountID string, subscriptionID string) MarketplacesClient {
	return original.NewMarketplacesClient(billingAccountID, departmentID, enrollmentAccountID, subscriptionID)
}
func NewMarketplacesClientWithBaseURI(baseURI string, billingAccountID string, departmentID string, enrollmentAccountID string, subscriptionID string) MarketplacesClient {
	return original.NewMarketplacesClientWithBaseURI(baseURI, billingAccountID, departmentID, enrollmentAccountID, subscriptionID)
}
func NewMarketplacesByBillingAccountClient(billingAccountID string, departmentID string, enrollmentAccountID string, subscriptionID string) MarketplacesByBillingAccountClient {
	return original.NewMarketplacesByBillingAccountClient(billingAccountID, departmentID, enrollmentAccountID, subscriptionID)
}
func NewMarketplacesByBillingAccountClientWithBaseURI(baseURI string, billingAccountID string, departmentID string, enrollmentAccountID string, subscriptionID string) MarketplacesByBillingAccountClient {
	return original.NewMarketplacesByBillingAccountClientWithBaseURI(baseURI, billingAccountID, departmentID, enrollmentAccountID, subscriptionID)
}
func NewMarketplacesByDepartmentClient(billingAccountID string, departmentID string, enrollmentAccountID string, subscriptionID string) MarketplacesByDepartmentClient {
	return original.NewMarketplacesByDepartmentClient(billingAccountID, departmentID, enrollmentAccountID, subscriptionID)
}
func NewMarketplacesByDepartmentClientWithBaseURI(baseURI string, billingAccountID string, departmentID string, enrollmentAccountID string, subscriptionID string) MarketplacesByDepartmentClient {
	return original.NewMarketplacesByDepartmentClientWithBaseURI(baseURI, billingAccountID, departmentID, enrollmentAccountID, subscriptionID)
}
func NewMarketplacesByEnrollmentAccountsClient(billingAccountID string, departmentID string, enrollmentAccountID string, subscriptionID string) MarketplacesByEnrollmentAccountsClient {
	return original.NewMarketplacesByEnrollmentAccountsClient(billingAccountID, departmentID, enrollmentAccountID, subscriptionID)
}
func NewMarketplacesByEnrollmentAccountsClientWithBaseURI(baseURI string, billingAccountID string, departmentID string, enrollmentAccountID string, subscriptionID string) MarketplacesByEnrollmentAccountsClient {
	return original.NewMarketplacesByEnrollmentAccountsClientWithBaseURI(baseURI, billingAccountID, departmentID, enrollmentAccountID, subscriptionID)
}
func PossibleBillingFrequencyValues() []BillingFrequency {
	return original.PossibleBillingFrequencyValues()
}
func PossibleCategoryTypeValues() []CategoryType {
	return original.PossibleCategoryTypeValues()
}
func PossibleDatagrainValues() []Datagrain {
	return original.PossibleDatagrainValues()
}
func PossibleOperatorTypeValues() []OperatorType {
	return original.PossibleOperatorTypeValues()
}
func PossiblePriceHiddenValues() []PriceHidden {
	return original.PossiblePriceHiddenValues()
}
func PossibleTimeGrainTypeValues() []TimeGrainType {
	return original.PossibleTimeGrainTypeValues()
}
func NewOperationsClient(billingAccountID string, departmentID string, enrollmentAccountID string, subscriptionID string) OperationsClient {
	return original.NewOperationsClient(billingAccountID, departmentID, enrollmentAccountID, subscriptionID)
}
func NewOperationsClientWithBaseURI(baseURI string, billingAccountID string, departmentID string, enrollmentAccountID string, subscriptionID string) OperationsClient {
	return original.NewOperationsClientWithBaseURI(baseURI, billingAccountID, departmentID, enrollmentAccountID, subscriptionID)
}
func NewPriceSheetClient(billingAccountID string, departmentID string, enrollmentAccountID string, subscriptionID string) PriceSheetClient {
	return original.NewPriceSheetClient(billingAccountID, departmentID, enrollmentAccountID, subscriptionID)
}
func NewPriceSheetClientWithBaseURI(baseURI string, billingAccountID string, departmentID string, enrollmentAccountID string, subscriptionID string) PriceSheetClient {
	return original.NewPriceSheetClientWithBaseURI(baseURI, billingAccountID, departmentID, enrollmentAccountID, subscriptionID)
}
func NewReservationRecommendationsClient(billingAccountID string, departmentID string, enrollmentAccountID string, subscriptionID string) ReservationRecommendationsClient {
	return original.NewReservationRecommendationsClient(billingAccountID, departmentID, enrollmentAccountID, subscriptionID)
}
func NewReservationRecommendationsClientWithBaseURI(baseURI string, billingAccountID string, departmentID string, enrollmentAccountID string, subscriptionID string) ReservationRecommendationsClient {
	return original.NewReservationRecommendationsClientWithBaseURI(baseURI, billingAccountID, departmentID, enrollmentAccountID, subscriptionID)
}
func NewReservationsDetailsClient(billingAccountID string, departmentID string, enrollmentAccountID string, subscriptionID string) ReservationsDetailsClient {
	return original.NewReservationsDetailsClient(billingAccountID, departmentID, enrollmentAccountID, subscriptionID)
}
func NewReservationsDetailsClientWithBaseURI(baseURI string, billingAccountID string, departmentID string, enrollmentAccountID string, subscriptionID string) ReservationsDetailsClient {
	return original.NewReservationsDetailsClientWithBaseURI(baseURI, billingAccountID, departmentID, enrollmentAccountID, subscriptionID)
}
func NewReservationsSummariesClient(billingAccountID string, departmentID string, enrollmentAccountID string, subscriptionID string) ReservationsSummariesClient {
	return original.NewReservationsSummariesClient(billingAccountID, departmentID, enrollmentAccountID, subscriptionID)
}
func NewReservationsSummariesClientWithBaseURI(baseURI string, billingAccountID string, departmentID string, enrollmentAccountID string, subscriptionID string) ReservationsSummariesClient {
	return original.NewReservationsSummariesClientWithBaseURI(baseURI, billingAccountID, departmentID, enrollmentAccountID, subscriptionID)
}
func NewTagsClient(billingAccountID string, departmentID string, enrollmentAccountID string, subscriptionID string) TagsClient {
	return original.NewTagsClient(billingAccountID, departmentID, enrollmentAccountID, subscriptionID)
}
func NewTagsClientWithBaseURI(baseURI string, billingAccountID string, departmentID string, enrollmentAccountID string, subscriptionID string) TagsClient {
	return original.NewTagsClientWithBaseURI(baseURI, billingAccountID, departmentID, enrollmentAccountID, subscriptionID)
}
func NewUsageDetailsClient(billingAccountID string, departmentID string, enrollmentAccountID string, subscriptionID string) UsageDetailsClient {
	return original.NewUsageDetailsClient(billingAccountID, departmentID, enrollmentAccountID, subscriptionID)
}
func NewUsageDetailsClientWithBaseURI(baseURI string, billingAccountID string, departmentID string, enrollmentAccountID string, subscriptionID string) UsageDetailsClient {
	return original.NewUsageDetailsClientWithBaseURI(baseURI, billingAccountID, departmentID, enrollmentAccountID, subscriptionID)
}
func NewUsageDetailsByBillingAccountClient(billingAccountID string, departmentID string, enrollmentAccountID string, subscriptionID string) UsageDetailsByBillingAccountClient {
	return original.NewUsageDetailsByBillingAccountClient(billingAccountID, departmentID, enrollmentAccountID, subscriptionID)
}
func NewUsageDetailsByBillingAccountClientWithBaseURI(baseURI string, billingAccountID string, departmentID string, enrollmentAccountID string, subscriptionID string) UsageDetailsByBillingAccountClient {
	return original.NewUsageDetailsByBillingAccountClientWithBaseURI(baseURI, billingAccountID, departmentID, enrollmentAccountID, subscriptionID)
}
func NewUsageDetailsByDepartmentClient(billingAccountID string, departmentID string, enrollmentAccountID string, subscriptionID string) UsageDetailsByDepartmentClient {
	return original.NewUsageDetailsByDepartmentClient(billingAccountID, departmentID, enrollmentAccountID, subscriptionID)
}
func NewUsageDetailsByDepartmentClientWithBaseURI(baseURI string, billingAccountID string, departmentID string, enrollmentAccountID string, subscriptionID string) UsageDetailsByDepartmentClient {
	return original.NewUsageDetailsByDepartmentClientWithBaseURI(baseURI, billingAccountID, departmentID, enrollmentAccountID, subscriptionID)
}
func NewUsageDetailsByEnrollmentAccountClient(billingAccountID string, departmentID string, enrollmentAccountID string, subscriptionID string) UsageDetailsByEnrollmentAccountClient {
	return original.NewUsageDetailsByEnrollmentAccountClient(billingAccountID, departmentID, enrollmentAccountID, subscriptionID)
}
func NewUsageDetailsByEnrollmentAccountClientWithBaseURI(baseURI string, billingAccountID string, departmentID string, enrollmentAccountID string, subscriptionID string) UsageDetailsByEnrollmentAccountClient {
	return original.NewUsageDetailsByEnrollmentAccountClientWithBaseURI(baseURI, billingAccountID, departmentID, enrollmentAccountID, subscriptionID)
}
func UserAgent() string {
	return original.UserAgent() + " profiles/preview"
}
func Version() string {
	return original.Version()
}
